{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","pages/TabsPage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","App","tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","find","tab","map","HomePage","NotFoundPage","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"4NAQaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CACb,YAAaD,KAJnB,SAQGF,KCfQI,EAAU,kBACrB,qBACE,UAAQ,MACRH,UAAU,oDACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,OAAOC,KAAK,iBCNvBM,G,kBAAgB,WAC3B,OACE,qCACE,cAAC,EAAD,IACA,qBAAK,UAAQ,MAAb,SACE,sBAAML,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,eCTCM,EAAc,CACzB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAChC,IAAQC,EAAUC,cAAVD,MAEFE,EAAcP,EAAKQ,MAAK,SAACC,GAAD,OAASJ,IAAUI,EAAIR,MAErD,OACE,qBAAKP,UAAU,UAAf,SACE,sBAAK,UAAQ,gBAAb,UACE,oBAAIA,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGM,EAAKU,KAAI,SAACD,GAAD,OACR,oBACEf,UAAWE,IAAW,CACpB,YAAaa,EAAIR,MAAJ,OAAWM,QAAX,IAAWA,OAAX,EAAWA,EAAaN,MAEvC,UAAQ,MAJV,SAOE,cAAC,IAAD,CACET,GAAE,aAAQiB,EAAIR,IACd,UAAQ,UAFV,SAIGQ,EAAIP,SANFO,EAAIR,WAajB,qBAAKP,UAAU,QAAQ,UAAQ,aAA/B,SAEIa,EACIA,EAAYJ,QACZ,8BC5CHQ,EAAW,WACtB,OAAO,oBAAIjB,UAAU,QAAd,wBCDIkB,EAAe,WAC1B,OAAO,oBAAIlB,UAAU,QAAd,6BCWTmB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUxB,GAAG,IAAI0B,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,aAI/BG,SAASC,eAAe,W","file":"static/js/main.d5578f9e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', {\n        'is-active': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"Nav\"\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <MainNav />\n      <div data-cy=\"app\">\n        <main className=\"section\">\n          <div className=\"container\">\n            <Outlet />\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId } = useParams();\n\n  const selectedTab = tabs.find((tab) => tabId === tab.id);\n\n  return (\n    <div className=\"section\">\n      <div data-cy=\"TabsComponent\">\n        <h1 className=\"title\">Tabs page</h1>\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <li\n                className={classNames({\n                  'is-active': tab.id === selectedTab?.id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <Link\n                  to={`../${tab.id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {tab.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {\n            selectedTab\n              ? selectedTab.content\n              : 'Please select a tab'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './pages/TabsPage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}